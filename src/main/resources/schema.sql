CREATE TABLE IF NOT EXISTS users (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(100),
    login VARCHAR (100) NOT NULL,
    birthday DATE,
    email VARCHAR(100)
);

CREATE TABLE IF NOT EXISTS friendships (
    user_id_who_send INT,
    user_id_to_whom_send INT,
    status varchar (20),
    FOREIGN KEY (user_id_who_send) REFERENCES users (id) ON DELETE CASCADE,
    FOREIGN KEY (user_id_to_whom_send) REFERENCES users (id) ON DELETE CASCADE,
    PRIMARY KEY (user_id_who_send, user_id_to_whom_send)
);

CREATE TABLE IF NOT EXISTS genres (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR (100) NOT NULL
);

CREATE TABLE IF NOT EXISTS films (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(200),
    description VARCHAR(200),
    duration INT,
    release_date DATE,
    rating INT
);

CREATE TABLE IF NOT EXISTS films_genres (
    film_id INT,
    genre_id INT,
    FOREIGN KEY (film_id) REFERENCES films (id) ON DELETE CASCADE,
    FOREIGN KEY (genre_id) REFERENCES genres (id) ON DELETE CASCADE,
    PRIMARY KEY (film_id, genre_id)
);

CREATE TABLE IF NOT EXISTS mpa_ratings (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar (15) NOT NULL
);

CREATE TABLE IF NOT EXISTS mpa_films (
    film_id INT,
    mpa_rating INT,
    FOREIGN KEY (film_id) REFERENCES films (id),
    FOREIGN KEY (mpa_rating) REFERENCES mpa_ratings (id),
    PRIMARY KEY (film_id, mpa_rating)
);

CREATE TABLE IF NOT EXISTS likes (
    user_id INT,
    film_id INT,
    FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE,
    FOREIGN KEY (film_id) REFERENCES films (id) ON DELETE CASCADE,
    PRIMARY KEY (user_id, film_id)
);
